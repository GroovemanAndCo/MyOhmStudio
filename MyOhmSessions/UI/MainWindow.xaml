<controls:AdonisWindow x:Class="MyOhmSessions.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:nlogViewer="clr-namespace:NlogViewer;assembly=NlogViewer"
        xmlns:myOhmSessions="clr-namespace:MyOhmSessions"
        xmlns:ohmstudioManager="clr-namespace:OhmstudioManager;assembly=OhmstudioManager"
        xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        mc:Ignorable="d"
        Title="MyOhmSessions" Width="1250" Height="1050" 
        Background="#202020"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        >
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#373737" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0,2,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E59400" />
                                <Setter Property="Foreground" Value="Gold" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="OrangeRed" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#404040" />
            <Setter Property="Foreground" Value="AntiqueWhite" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="AntiqueWhite" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="AntiqueWhite" />
        </Style>
    </Window.Resources>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--<Border Background="Green" />-->

        <ListView Name="lvDataBinding" Grid.Row="0" Grid.Column="0"
                BorderThickness="2"
                Background="#202020" MinWidth="800" AlternationCount="2"
                ItemsSource="{Binding CurrentItems}"
                SelectionChanged="LvDataBinding_OnSelectionChanged" 
                SelectionMode="Single"
                IsSynchronizedWithCurrentItem="True"
                >
            <ListView.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="Goldenrod" />
                </Style>
                <Style TargetType="ListViewItem">
                    <EventSetter Event="MouseDoubleClick" Handler="HandleListViewDoubleClick" />
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                            <Setter Property="Background" Value="#202020" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                            <Setter Property="Background" Value="#303030" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView >
                    <GridViewColumn Header="Title" Width="260" DisplayMemberBinding="{Binding title}" >
                        <GridViewColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock Text="{Binding title}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Description" Width="700" DisplayMemberBinding="{Binding short_desc}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding short_desc}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Created"  DisplayMemberBinding="{Binding Created}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Created}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Modified"  DisplayMemberBinding="{Binding Modified}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Modified}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Public" DisplayMemberBinding="{Binding Public}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Public}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Closed" DisplayMemberBinding="{Binding closed}"  >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding closed}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Cloneable" DisplayMemberBinding="{Binding cloneable}"  >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding cloneable}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Hidden" DisplayMemberBinding="{Binding hidden}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding hidden}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Owners" Width="600" DisplayMemberBinding="{Binding Owners}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Owners}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Contributors" Width="600" DisplayMemberBinding="{Binding Contributors}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Contributors}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Styles" DisplayMemberBinding="{Binding Styles}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Styles}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Moods" DisplayMemberBinding="{Binding Moods}" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Moods}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Name="RightPanelColDef"  Grid.Column="1" 
              Visibility="{Binding IsChecked, ElementName=RToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}"
              >

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition  MinWidth="5" MaxWidth="380" Width="380"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="0"  Width="5" ResizeBehavior="CurrentAndNext" />
            <StackPanel Name="RightPanel" Grid.Column="1" Orientation="Vertical" >
                <WrapPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" Background="#202020" Loaded="OnLoaded">                <Button Click="OnOpenOugFbPage" >
                    <Image Source="../Images/ougBanner.png"></Image>
                </Button>

                    <WrapPanel Margin="0,5" Orientation="Horizontal" >
                        <Button Height = "34"  Width="80" Margin="5,0" Click="OnOpenJson" ToolTip="Open am Ohmstudio sessions json file." >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../Images/folderopen.png" Width="24" VerticalAlignment="Top" Margin="2,-2" />
                                <TextBlock>Open</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button Height="36" Margin="5,0" Width="80" IsEnabled="{Binding Path=BackgroundTaskStopped}" Click="OnDownload" Content="Download" ToolTip="Download the selected mixdown entry." />
                        <Button Height="36" Margin="5,0" Width="94" Click="OnDownloadAll" ToolTip="Downloads all mixdown entries in your session list view.">Download All</Button>
                    </WrapPanel>
                    <WrapPanel Margin="5,5"  Orientation="Horizontal">
                        <Button Name="btnContains"  Height="36" Click="OnShowMatchesFor" ToolTip="Filter sessions that match a substring." >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../Images/search.png" Height="24" VerticalAlignment="Top" Margin="2,-2"/>
                                <TextBlock>Contains</TextBlock>
                            </StackPanel>
                        </Button>
                        <TextBox Name ="tbMatch" Margin="5,0"  Text="{Binding Matching, Mode=TwoWay}" Width="112" KeyDown="OnTextMatchingKeydown"/>
                        <Button Height="36" Background="Transparent" BorderThickness="0" Margin="5,0" Click="OnAbout" ToolTip="About MyOhmSessions ...">
                            <Image Source="../Images/info.png" Width="32" VerticalAlignment="Top"  />
                        </Button>
                        <Button Background="Transparent" BorderThickness="0" Height = "34"  Margin="5,0" Click="OnOpenJsonLink" 
                            ToolTip="Open my link on Ohmstudio.com and copy and save the text to mysessions0.json in your Desktop folder. Note: you must be logged in in www.ohmstudio.com" >
                            <Image Source="../Images/openLink.png" Width="24" VerticalAlignment="Top" Margin="2,-5" />
                        </Button>
                        <Button Height ="36" Click="BtnDonate_Click" Background="Transparent" BorderThickness="0" ToolTip="Pay Me a Coffee :)">
                            <Image Source="../Images/donate.png" Height="24" VerticalAlignment="Top" Margin="2,-5"/>
                        </Button>
                    </WrapPanel>
                    <TextBlock Margin="5,10,0,0"  VerticalAlignment="Top" ToolTip="Specify sessions will be downloaded." >
                    <Run FontWeight="Bold" Foreground="DarkGreen" BaselineAlignment="TextTop"> Destination: </Run>
                    <Button Click="OnSaveToFolder" Background="Transparent" BorderThickness="0">
                         <Image Source="../Images/folderopen.png" Width="24" VerticalAlignment="Top" Margin="2,-5"/>
                    </Button>
                    <Run Text="{Binding DestinationFolder}" Foreground="AntiqueWhite" BaselineAlignment="TextTop"/>
                    </TextBlock>
                </WrapPanel>
                <Grid >
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="AntiqueWhite" />
                        </Style>

                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="31.5"/>
                        <ColumnDefinition Width="58"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26"/>
                        <RowDefinition Height="26"/>
                        <RowDefinition Height="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                        <RowDefinition MinHeight="26"/>
                    </Grid.RowDefinitions>
                    <Label x:Name="DlStatus" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4"  />
                    <ProgressBar  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4"  
                              Background="#404040" Margin="5,0,20,0" 
                              x:Name="DlProgress" Minimum="0" Maximum="100" ToolTip="Displays download progress." />
                    <TextBlock Grid.Row="1" Grid.Column="3" Margin="67,5,166,5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Value, ElementName=DlProgress, StringFormat=\{0:0\}%}" Width="47" />
                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,5" Text="Title" TextAlignment="Left" Grid.ColumnSpan="3" />
                    <TextBlock Grid.Row="2" Grid.Column="3" Margin="5,5" TextAlignment="Left" TextWrapping="Wrap">
                        <Hyperlink NavigateUri="{Binding CurrentItem.url_web}" RequestNavigate="Hyperlink_RequestNavigate" BaselineAlignment="Top" ToolTip="Open the current selection web page." >
                            <Run Text="open"/>
                        </Hyperlink>
                        <Run Text=" "/><Run Text="{Binding CurrentItem.title}" Foreground="Goldenrod" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,5" Text="Description" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="3" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.short_desc}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5,5" Text="Members" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="4" Grid.Column="3" Margin="5,5" TextWrapping="WrapWithOverflow" TextAlignment="Left" ><Run Text="{Binding CurrentItem.Owners, Mode=OneWay}"  Foreground="Cyan" FontWeight="Bold"  /><LineBreak/><Run Text="{Binding CurrentItem.Contributors, Mode=OneWay}"  /></TextBlock>
                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5,5" Text="Created" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="5" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.CreatedPretty}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="6" Grid.Column="0" Margin="5,5" Text="Modified" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="6" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.ModifiedPretty}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="7" Grid.Column="0" Margin="5,5" Text="Attributes" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="7" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.Attributes}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="8" Grid.Column="0" Margin="5,5" Text="Role" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="8" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.role}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="9" Grid.Column="0" Margin="5,5" Text="Styles" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="9" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.Styles}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="10" Grid.Column="0" Margin="5,5,0,25" Text="Moods" TextAlignment="Left" Grid.ColumnSpan="3"/>
                    <TextBlock Grid.Row="10" Grid.Column="3" Margin="5,5" Text="{Binding CurrentItem.Moods}" TextWrapping="WrapWithOverflow" TextAlignment="Left"/>
                    <TextBlock Grid.Row="11" Grid.Column="0" Margin="5,05" TextAlignment="Left" Grid.ColumnSpan="2" ToolTip="Open the current selection mixdown web page." ><Hyperlink NavigateUri="{Binding CurrentItem.mixdown[0].url_m4a}" RequestNavigate="Hyperlink_RequestNavigate" BaselineAlignment="top"><Run Text="Mixdown"/></Hyperlink></TextBlock>
                    <TextBlock Grid.Row="11" Grid.Column="3" Margin="5,0" TextAlignment="Left" ><InlineUIContainer><Image Source="{Binding CurrentItem.mixdown[0].url_png}" MaxWidth="200" /></InlineUIContainer></TextBlock>
                    <WrapPanel Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="3"  Margin="2,5" Orientation="Horizontal" VerticalAlignment="Center" >
                        <Button Margin="0,0,2,0"  Width="18" Height="18" x:Name="btnPlayerRwd"        Content="7"   FontFamily="Marlett"  Click="OnPlayerRewind" RenderTransformOrigin="0.5,0.5" ToolTip="Rewind" >
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>
                        <Button Margin="0,0,2,0" Width="18" Height="18" x:Name="btnPlayerStop"       Content="g" FontFamily="Marlett" FontSize="9" Click="OnPlayerStop" ToolTip="Stop the current selection and autoplay."/>
                        <Button Margin="0,0,2,0" Width="18" Height="18" x:Name="btnPlayerPlayResume" Content="4" FontFamily="Marlett" Click="OnPlayerPlayResume" ToolTip="Play/Pause the current selection."/>
                        <Button Margin="0,0,2,0" Width="18" Height="18" x:Name="btnPlayerFwd"        Content="7" FontFamily="Marlett"  Click="OnPlayerForward" RenderTransformOrigin="0.5,0.5" ToolTip="Forward">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>
                    </WrapPanel>
                    <Slider Grid.Row="12" Grid.Column="3" Width="212" Margin="-1,3,0,5" HorizontalAlignment="Left"  VerticalAlignment="Center" 
                        Value="{Binding MainViewModel.SliderPosition, Mode=TwoWay}" ToolTip="Slide to any position in the session" />
                    <TextBlock Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,0" Text="Song Position" VerticalAlignment="Center" ToolTip="Display the current position and the session total duration." />
                    <TextBlock Grid.Row="13" Grid.Column="3"  Margin="5,0" Foreground="Green" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" ToolTip="Display the current position and the session total duration.">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00;00}:{2:00} / {3:00}:{4:00;00}:{5:00}">
                                <Binding Path="MainViewModel.SongCurrentPosition.Hours" />
                                <Binding Path="MainViewModel.SongCurrentPosition.Minutes" />
                                <Binding Path="MainViewModel.SongCurrentPosition.Seconds" />
                                <Binding Path="MainViewModel.SongDuration.Hours" />
                                <Binding Path="MainViewModel.SongDuration.Minutes" />
                                <Binding Path="MainViewModel.SongDuration.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,5,0,5" Width="95"  Text="Song Offset" TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Play a session from 0% to 99% of its length. useful for quickly previewing." />
                    <WrapPanel Grid.Row="14" Grid.Column="3" Margin="5,4" VerticalAlignment="Center" ToolTip="Play a session from 0% to 99% of its length. useful for quickly previewing.">
                        <TextBox   Width="25" Text="{Binding MainViewModel.InitialSliderOffsetPct, FallbackValue=0, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" 
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,1,0,-1" />
                        <TextBlock Margin="5,0" Width="10" Text="%" VerticalAlignment="Center" />
                    </WrapPanel>
                </Grid>
                <CheckBox Margin="5,5,0,5"  Name="cbAutoplay" IsChecked="{Binding AutoPlaySetting}" ToolTip="Play the selection automatically, also auto-select the next session in the list, when audio ends.">Autoplay</CheckBox>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
            Visibility="{Binding IsChecked, ElementName=BToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}"
            >
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="5" MaxHeight="5"/>
                <RowDefinition Height="120" MinHeight="5" MaxHeight="600"/>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="0" ResizeDirection="Rows" Height="5" ResizeBehavior="CurrentAndNext" />
            <nlogViewer:NlogViewer  Grid.Row="1" AutoScrollToLast="True"  MaxRowCount="100" Name="LogCtrl" MessageWidth="950" TimeWidth="0" LoggerNameWidth="0" LevelWidth="40" ExceptionWidth="0" />
        </Grid>
        <StatusBar Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0" Height="28">
            <ToggleButton Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right" Name="RToggleButton" IsChecked="True" ToolTip="Show / Hide the right panel.">
                <Image Height="20" Source="../Images/rpanel.png"></Image>
            </ToggleButton>
            <ToggleButton Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right" Name="BToggleButton" IsChecked="True" ToolTip="Show / Hide the bottom panel.">
                <Image Height="20" Source="../Images/bpanel.png"></Image>

            </ToggleButton>
        </StatusBar>
    </Grid>

</controls:AdonisWindow>
